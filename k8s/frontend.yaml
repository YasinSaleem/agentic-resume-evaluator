apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: resume-evaluator
  labels:
    app: frontend
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        version: v1
    spec:
      containers:
      - name: frontend
        image: resume-evaluator-frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
        # Explicit environment variables (matching docker-compose.yml)
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: resume-evaluator-config
              key: NODE_ENV
        - name: NEXT_PUBLIC_API_URL
          valueFrom:
            configMapKeyRef:
              name: resume-evaluator-config
              key: NEXT_PUBLIC_API_URL
        # Load .env file contents (matching env_file: ./frontend/.env)
        envFrom:
        - secretRef:
            name: frontend-env-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      # Wait for backend to be ready
      initContainers:
      - name: wait-for-backend
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          until nc -z backend-service 8000; do
            echo "Waiting for backend service..."
            sleep 5
          done
          echo "Backend service is ready!"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: resume-evaluator
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
  type: ClusterIP